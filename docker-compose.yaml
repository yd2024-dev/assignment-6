version: '3.7'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    #volumes:
      #- ./nginx.conf:/etc/nginx/conf.d/default.conf  # Mount custom Nginx config
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Custom nginx.conf (main config file)
      - ./nginx.conf.d:/etc/nginx/conf.d    # Directory for any additional server-specific configs
    ports:
      - "8080:80"  # Expose port 8080 on host, mapping to 80 on Nginx container
    depends_on:
      - front-end
      - server
      - server-2
      - server-3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://server:3000/health"]  # Simple health check for backend
      interval: 30s  # Run every 30 seconds
      retries: 5  # Retry 5 times before failing
      start_period: 30s  # Wait 30 seconds before starting checks
      timeout: 10s  # Timeout each check after 10 seconds

  front-end:
    image: ghcr.io/mcmastercce/bvd-103-mcmasterful-books/mcmasterful-books-docker:main
    container_name: front-end
    volumes:
      - ./adapter:/source/adapter  # Keep this volume mount for adapter directory
    environment:
      - NODE_ENV=production
    # No need to expose port 9080 here; used internally by Nginx

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s

  server:
    image: node:20
    container_name: server
    working_dir: /app
    volumes:
      - ./:/app  # Mount current directory for server
    command: npx -y tsx ./index.ts
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]  # Simple health check for backend
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  server-2:
    image: node:20
    container_name: server-2
    working_dir: /app
    volumes:
      - ./:/app  # Mount current directory for server
    command: npx -y tsx ./index.ts
    ports:
      - "3001:3000"  # Expose a different port to avoid conflict
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]  # Health check for server-2
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s

  server-3:
    image: node:20
    container_name: server-3
    working_dir: /app
    volumes:
      - ./:/app  # Mount current directory for server
    command: npx -y tsx ./index.ts
    ports:
      - "3002:3000"  # Expose a different port to avoid conflict
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]  # Health check for server-3
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
