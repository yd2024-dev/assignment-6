# The 'events' block is required by NGINX
events {
    worker_connections 1024;  # You can adjust this number depending on your system
}

http {
    # Enable caching (this will cache successful responses)
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=app_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # Define the backend servers (app1 replicas)
    upstream app_backend {
        # Load balance across 3 app1 instances
        server app1:3000;
        server app1:3001;
        server app1:3002;
    }

    # Main server configuration
    server {
        listen 80;  # Listens for HTTP traffic on port 80

        # Define caching behavior
        location / {
            proxy_cache app_cache;
            proxy_cache_valid 200 1m;  # Cache successful responses for 1 minute
            proxy_cache_use_stale error timeout updating;  # Serve stale cache if backend is slow or fails
            proxy_pass http://app_backend;  # Forward requests to the app backend (load balancing)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # Ensures the protocol (http/https) is passed to the backend
        }

        # Optionally, configure access logs (can be adjusted per your needs)
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Optionally configure a health check route for backend servers (optional)
        location /health {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }
}  # <-- Make sure this is the closing brace for the 'http' block
